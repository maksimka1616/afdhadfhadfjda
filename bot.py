import telebot
import sqlite3
import re
import datetime
import schedule
import time

bot = telebot.TeleBot('8146601076:AAFzZ7uFVRG64b3NnLQWAhRyvpk08pF2J38')  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

def create_table():
    conn = sqlite3.connect('bot_data.db')
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS user_data (
            id INTEGER PRIMARY KEY,
            total_rating INTEGER DEFAULT 0,
            total_coins INTEGER DEFAULT 0,
            day_rating INTEGER DEFAULT 0,
            day_coins INTEGER DEFAULT 0,
            week_rating INTEGER DEFAULT 0,
            week_coins INTEGER DEFAULT 0,
            month_rating INTEGER DEFAULT 0,
            month_coins INTEGER DEFAULT 0
        )
    """)
    conn.commit()
    conn.close()

create_table()


def get_user_data(user_id):
    conn = sqlite3.connect('bot_data.db')
    cursor = conn.cursor()
    cursor.execute("""
        SELECT 
            total_rating, total_coins, 
            day_rating, day_coins, 
            week_rating, week_coins, 
            month_rating, month_coins 
        FROM user_data WHERE id = ?
    """, (user_id,))
    row = cursor.fetchone()
    conn.close()
    if row:
        return {
            'total_rating': row[0], 'total_coins': row[1],
            'day_rating': row[2], 'day_coins': row[3],
            'week_rating': row[4], 'week_coins': row[5],
            'month_rating': row[6], 'month_coins': row[7]
        }
    else:
        return {
            'total_rating': 0, 'total_coins': 0,
            'day_rating': 0, 'day_coins': 0,
            'week_rating': 0, 'week_coins': 0,
            'month_rating': 0, 'month_coins': 0
        }

def update_user_data(user_id, rating, coins):
    conn = sqlite3.connect('bot_data.db')
    cursor = conn.cursor()
    cursor.execute("INSERT OR IGNORE INTO user_data (id) VALUES (?)", (user_id,))
    cursor.execute("""
        UPDATE user_data SET 
            total_rating = total_rating + ?, 
            total_coins = total_coins + ?,
            day_rating = day_rating + ?, 
            day_coins = day_coins + ?,
            week_rating = week_rating + ?, 
            week_coins = week_coins + ?,
            month_rating = month_rating + ?, 
            month_coins = month_coins + ?
        WHERE id = ?
    """, (rating, coins, rating, coins, rating, coins, rating, coins, user_id))
    conn.commit()
    conn.close()

def send_daily_report():
    conn = sqlite3.connect('bot_data.db')
    cursor = conn.cursor()
    cursor.execute("SELECT id, day_rating, day_coins FROM user_data")
    users = cursor.fetchall()
    for user_id, day_rating, day_coins in users:
        try:
            bot.send_message(1971188182, f"–û—Ç—á–µ—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n–†–µ–π—Ç–∏–Ω–≥: {day_rating}\n–ú–æ–Ω–µ—Ç—ã: {day_coins}")
            cursor.execute("UPDATE user_data SET day_rating = 0, day_coins = 0 WHERE id = ?", (user_id,))
        except telebot.apihelper.ApiException as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    conn.commit()
    conn.close()

def send_weekly_report():
    conn = sqlite3.connect('bot_data.db')
    cursor = conn.cursor()
    cursor.execute("SELECT id, week_rating, week_coins FROM user_data")
    users = cursor.fetchall()
    for user_id, week_rating, week_coins in users:
        try:
            bot.send_message(1971188182, f"–û—Ç—á–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n–†–µ–π—Ç–∏–Ω–≥: {week_rating}\n–ú–æ–Ω–µ—Ç—ã: {week_coins}")
            cursor.execute("UPDATE user_data SET week_rating = 0, week_coins = 0 WHERE id = ?", (user_id,))
        except telebot.apihelper.ApiException as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    conn.commit()
    conn.close()

schedule.every().day.at("00:00").do(send_daily_report)
schedule.every().monday.at("00:00""").do(send_weekly_report)

@bot.message_handler(commands=['info'])
def handle_info(message):
    user_data = get_user_data(message.from_user.id)
    report = f"""–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ:
1–¥: {user_data['day_rating']}—Ä|{user_data['day_coins']}–º
1–Ω: {user_data['week_rating']}—Ä|{user_data['week_coins']}–º
1–º: {user_data['month_rating']}—Ä|{user_data['month_coins']}–º
–í—Å–µ –≤—Ä–µ–º—è: {user_data['total_rating']}—Ä|{user_data['total_coins']}–º"""
    bot.reply_to(message, report)

@bot.message_handler(func=lambda message: message.text is not None and not message.text.startswith('/'))
def handle_message(message):
    text = message.text
    match = re.search(r"üí´ –ò–º–ø–µ—Ä–∏—è –ø–æ–ª—É—á–∏–ª–∞:\s*(\d+)\s*—Ä–µ–π—Ç–∏–Ω–≥–∞\s*–∏\s*(\d+)\s*–∑–æ–ª–æ—Ç—ã—Ö\s*–º–æ–Ω–µ—Ç–æ–∫", text)
    if match:
        try:
            rating = int(match.group(1))
            coins = int(match.group(2))
            update_user_data(message.from_user.id, rating, coins)
            bot.pin_chat_message(message.chat.id, message.message_id)
            bot.reply_to(message, "–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!")
            bot.send_message(1971188182, f"üí´ –ò–º–ø–µ—Ä–∏—è –ø–æ–ª—É—á–∏–ª–∞: {rating} —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ {coins} –∑–æ–ª–æ—Ç—ã—Ö –º–æ–Ω–µ—Ç–æ–∫") # –∑–∞–º–µ–Ω–∏—Ç–µ 1971188182 –Ω–∞ –≤–∞—à ID
        except (ValueError, IndexError, AttributeError):
            bot.reply_to(message, "–ù–µ –º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç.")
        except telebot.apihelper.ApiException as e:
            if e.error_code == 400:
                bot.reply_to(message, "–ù–µ –º–æ–≥—É –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤.")
            else:
                bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    elif "–ø–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à–∞ –∏–º–ø–µ—Ä–∏—è –ø–µ—Ä–µ—à–ª–∞ –≤ —Å—Ç–∞–¥–∏—é ¬´—Å–±–æ—Ä –Ω–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏—é¬ª üß≥" in text.lower():
        try:
            bot.pin_chat_message(message.chat.id, message.message_id)
            bot.reply_to(message, "–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!")
        except telebot.apihelper.ApiException as e:
            if e.error_code == 400:
                bot.reply_to(message, "–ù–µ –º–æ–≥—É –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤.")
            else:
                bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

bot.polling()

while True:
    schedule.run_pending()
    time.sleep(1)